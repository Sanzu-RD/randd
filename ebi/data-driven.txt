
Code complex effects, not complex data.




spell json : {
	spellstats: {}

}

status json : {
	creaturestats: {},
	spellstats: [ {} ],
	type: (reactor/modifier/interrupter)
	triggers: [ onDamageReceived, ]

}

	
effect Aoe / target type :
{
	[ // use arrays to add aoes together ?
		circle(2).move(target.x, 0)
		circle(2).move(-target.x, 0)
		circle(2).move(target.x, target.y)
		circle(2).move(-target.x, -target.y)
	],
	[
		
	]
}

spell cast :
{
	"node1": { // node 1
		"if": { // instruction condition
			"conditions": [ { "conditions" } ],
			"node11": { // node 11
				{ // instruction effect
					"effectid": 1,
					"formula": { "water": { 80, 0, 0, 0 } }
				}
			},
			"node12": { // node 12
				"if": { // instruction conditions
					[ { "conditions" } ],
					{ // node 121
						{ // instruction effect
							"effectid": 1,
							"formula": { "fire": { 1, 0, 0, 0 } }
							"multiplier": {
								type: "PerPercentMaxX",
								resType: "life",
								value: 20
							}
						}
					}
				}
				
			}
		}
		{ // instruction effect
			"effectid": 2,
			"summonCreatureModelId": 1,
			"multiplier": {
				type: "PerPercentMaxX",
				resType: "life",
				value: 20
			}
		}
	}

}

